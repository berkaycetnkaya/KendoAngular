{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { PtComment, PtUser } from '../../../../../core/models/domain';\nimport { EMPTY_STRING } from '../../../../../core/helpers/string-helpers';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction PtItemChitchatComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵelement(1, \"img\", 1);\n    i0.ɵɵelementStart(2, \"div\", 8)(3, \"h6\", 9)(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 10);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"span\", 11);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const comment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", comment_r1.user.avatar, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(comment_r1.user.fullName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 4, comment_r1.dateCreated));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r1.title);\n  }\n}\n\nexport class PtItemChitchatComponent {\n  constructor() {\n    this.comments$ = new BehaviorSubject([]);\n    this.addNewComment = new EventEmitter();\n    this.newCommentText = EMPTY_STRING;\n  }\n\n  get currentUserAvatar() {\n    if (this.currentUser) {\n      return this.currentUser.avatar;\n    }\n  }\n\n  onAddTapped() {\n    const newTitle = this.newCommentText.trim();\n\n    if (newTitle.length === 0) {\n      return;\n    }\n\n    const newComment = {\n      title: newTitle\n    };\n    this.addNewComment.emit(newComment);\n    this.newCommentText = EMPTY_STRING;\n  }\n\n  onTextFieldTap() {}\n\n}\n\nPtItemChitchatComponent.ɵfac = function PtItemChitchatComponent_Factory(t) {\n  return new (t || PtItemChitchatComponent)();\n};\n\nPtItemChitchatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PtItemChitchatComponent,\n  selectors: [[\"app-item-chitchat\"]],\n  inputs: {\n    comments$: \"comments$\",\n    currentUser: \"currentUser\"\n  },\n  outputs: {\n    addNewComment: \"addNewComment\"\n  },\n  decls: 11,\n  vars: 6,\n  consts: [[1, \"form-row\", \"align-items-center\"], [1, \"mr-3\", \"li-avatar\", \"rounded\", 3, \"src\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter new comment...\", \"name\", \"newComment\", 1, \"form-control\", \"pt-text-comment-add\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"list-unstyled\"], [\"class\", \"media chitchat-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"media\", \"chitchat-item\"], [1, \"media-body\"], [1, \"mt-0\", \"mb-1\"], [1, \"li-date\"], [\"type\", \"text\", 1, \"chitchat-text\"]],\n  template: function PtItemChitchatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0);\n      i0.ɵɵelement(2, \"img\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"textarea\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function PtItemChitchatComponent_Template_textarea_ngModelChange_4_listener($event) {\n        return ctx.newCommentText = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function PtItemChitchatComponent_Template_button_click_5_listener() {\n        return ctx.onAddTapped();\n      });\n      i0.ɵɵtext(6, \"Add\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"ul\", 5);\n      i0.ɵɵtemplate(9, PtItemChitchatComponent_li_9_Template, 11, 6, \"li\", 6);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"src\", ctx.currentUser == null ? null : ctx.currentUser.avatar, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCommentText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.newCommentText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 4, ctx.comments$));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i1.AsyncPipe, i1.DatePipe],\n  styles: [\".chitchat-item[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.chitchat-text[_ngcontent-%COMP%] {\\r\\n    color: #495057;\\r\\n    font-size: .9em;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB0LWl0ZW0tY2hpdGNoYXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0FBQ25CIiwiZmlsZSI6InB0LWl0ZW0tY2hpdGNoYXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGl0Y2hhdC1pdGVtIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5jaGl0Y2hhdC10ZXh0IHtcclxuICAgIGNvbG9yOiAjNDk1MDU3O1xyXG4gICAgZm9udC1zaXplOiAuOWVtO1xyXG59XHJcbiJdfQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAAA,SAA4DA,YAA5D,QAAkG,eAAlG;AAEA,SAAiBC,SAAjB,EAA4BC,MAA5B,QAAkD,mCAAlD;AAEA,SAASC,YAAT,QAA6B,4CAA7B;AACA,SAASC,eAAT,QAAgC,MAAhC;;;;;;;ICUIC;IACIA;IACAA,+BAAwB,CAAxB,EAAwB,IAAxB,EAAwB,CAAxB,EAAwB,CAAxB,EAAwB,MAAxB;IACgCA;IAA2BA;IAAOA;IAAsBA;;IACtEA;IAEdA;IAAyCA;IAAmBA;;;;;IAL3DA;IAAAA;IAE2BA;IAAAA;IAAwDA;IAAAA;IAG3CA;IAAAA;;;;ADRrD,OAAM,MAAOC,uBAAP,CAA8B;EANpCC;IAQoB,iBAA0C,IAAIH,eAAJ,CAAiC,EAAjC,CAA1C;IAEN,qBAAgB,IAAIJ,YAAJ,EAAhB;IAEH,sBAAiBG,YAAjB;EAuBV;;EArB+B,IAAjBK,iBAAiB;IACxB,IAAI,KAAKC,WAAT,EAAsB;MAClB,OAAO,KAAKA,WAAL,CAAiBC,MAAxB;IACH;EACJ;;EAEMC,WAAW;IACd,MAAMC,QAAQ,GAAG,KAAKC,cAAL,CAAoBC,IAApB,EAAjB;;IACA,IAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;MACvB;IACH;;IACD,MAAMC,UAAU,GAAiB;MAC7BC,KAAK,EAAEL;IADsB,CAAjC;IAGA,KAAKM,aAAL,CAAmBC,IAAnB,CAAwBH,UAAxB;IACA,KAAKH,cAAL,GAAsBV,YAAtB;EACH;;EAEMiB,cAAc,IAEpB;;AA5B+B;;;mBAAvBd;AAAuB;;;QAAvBA;EAAuBe;EAAAC;IAAAC;IAAAd;EAAA;EAAAe;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCbpCvB,6BAAM,CAAN,EAAM,KAAN,EAAM,CAAN;MAGQA;MAEAA,+BAAsB,CAAtB,EAAsB,UAAtB,EAAsB,CAAtB;MACcA;QAAA;MAAA;MACYA;MAE1BA;MAAsBA;QAAA,OAASwB,iBAAT;MAAsB,CAAtB;MAA6ExB;MAAGA;MAG9GA;MAEAA;MACIA;;MAUJA;;;;MAtBaA;MAAAA;MAGSA;MAAAA;MAGwDA;MAAAA;MAMtBA;MAAAA","names":["EventEmitter","PtComment","PtUser","EMPTY_STRING","BehaviorSubject","i0","PtItemChitchatComponent","constructor","currentUserAvatar","currentUser","avatar","onAddTapped","newTitle","newCommentText","trim","length","newComment","title","addNewComment","emit","onTextFieldTap","selectors","inputs","comments$","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\backlog\\components\\detail\\item-chitchat\\pt-item-chitchat.component.ts","C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\backlog\\components\\detail\\item-chitchat\\pt-item-chitchat.component.html"],"sourcesContent":["import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter, ViewContainerRef } from '@angular/core';\r\n\r\nimport { PtItem, PtComment, PtUser, PtTask } from '../../../../../core/models/domain';\r\nimport { PtNewComment } from '../../../../../shared/models/dto';\r\nimport { EMPTY_STRING } from '../../../../../core/helpers/string-helpers';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-item-chitchat',\r\n    templateUrl: 'pt-item-chitchat.component.html',\r\n    styleUrls: ['pt-item-chitchat.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PtItemChitchatComponent {\r\n\r\n    @Input() public comments$: BehaviorSubject<PtComment[]> = new BehaviorSubject<PtComment[]>([]);\r\n    @Input() public currentUser: PtUser | undefined;\r\n    @Output() addNewComment = new EventEmitter<PtNewComment>();\r\n\r\n    public newCommentText = EMPTY_STRING;\r\n\r\n    public get currentUserAvatar() {\r\n        if (this.currentUser) {\r\n            return this.currentUser.avatar;\r\n        }\r\n    }\r\n\r\n    public onAddTapped() {\r\n        const newTitle = this.newCommentText.trim();\r\n        if (newTitle.length === 0) {\r\n            return;\r\n        }\r\n        const newComment: PtNewComment = {\r\n            title: newTitle\r\n        };\r\n        this.addNewComment.emit(newComment);\r\n        this.newCommentText = EMPTY_STRING;\r\n    }\r\n\r\n    public onTextFieldTap() {\r\n\r\n    }\r\n}\r\n","<form>\r\n    <div class=\"form-row align-items-center\">\r\n\r\n        <img [src]=\"currentUser?.avatar\" class=\"mr-3 li-avatar rounded\" />\r\n\r\n        <div class=\"col-sm-6\">\r\n            <textarea [(ngModel)]=\"newCommentText\" placeholder=\"Enter new comment...\" class=\"form-control pt-text-comment-add\"\r\n                name=\"newComment\"></textarea>\r\n        </div>\r\n        <button type=\"button\" (click)=\"onAddTapped()\" class=\"btn btn-primary\" [disabled]=\"!newCommentText\">Add</button>\r\n    </div>\r\n</form>\r\n<hr />\r\n\r\n<ul class=\"list-unstyled\">\r\n    <li class=\"media chitchat-item\" *ngFor=\"let comment of comments$ | async\">\r\n        <img [src]=\"comment.user.avatar\" class=\"mr-3 li-avatar rounded\" />\r\n        <div class=\"media-body\">\r\n            <h6 class=\"mt-0 mb-1\"><span>{{ comment.user.fullName }}</span><span class=\"li-date\">{{comment.dateCreated |\r\n                    date}}</span></h6>\r\n\r\n            <span type=\"text\" class=\"chitchat-text \">{{ comment.title }}</span>\r\n        </div>\r\n\r\n    </li>\r\n</ul>\r\n"]},"metadata":{},"sourceType":"module"}