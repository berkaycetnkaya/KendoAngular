{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dashboard.service\";\nimport * as i2 from \"src/app/core/state/app-store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@progress/kendo-angular-buttons\";\nimport * as i5 from \"../../components/active-issues/active-issues.component\";\n\nfunction DashboardPageComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(2, 2, ctx_r0.filteredDateStart), \" - \", i0.ɵɵpipeBind1(3, 4, ctx_r0.filteredDateEnd), \"\");\n  }\n}\n\nexport class DashboardPageComponent {\n  constructor(dashboardService, store) {\n    this.dashboardService = dashboardService;\n    this.store = store;\n    this.filter = {};\n    this.statusCounts$ = new BehaviorSubject({\n      activeItemsCount: 0,\n      closeRate: 0,\n      closedItemsCount: 0,\n      openItemsCount: 0\n    });\n  }\n\n  get currentUserId() {\n    if (this.store.value.currentUser) {\n      return this.store.value.currentUser.id;\n    } else {\n      return undefined;\n    }\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  onMonthRangeTap(months) {\n    const range = this.getDateRange(months);\n    this.filteredDateStart = range.dateStart;\n    this.filteredDateEnd = range.dateEnd;\n    this.filter = {\n      userId: this.filter.userId,\n      dateEnd: range.dateEnd,\n      dateStart: range.dateStart\n    };\n    this.refresh();\n  }\n\n  refresh() {\n    this.sub = this.dashboardService.getStatusCounts(this.filter).subscribe(result => {\n      this.statusCounts$.next(result);\n    });\n  }\n\n  getDateRange(months) {\n    const now = new Date();\n    const start = new Date();\n    start.setMonth(start.getMonth() - months);\n    return {\n      dateStart: start,\n      dateEnd: now\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n}\n\nDashboardPageComponent.ɵfac = function DashboardPageComponent_Factory(t) {\n  return new (t || DashboardPageComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i2.Store));\n};\n\nDashboardPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardPageComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"dashboard\"], [1, \"d-flex\", \"justify-content-between\", \"flex-wrap\", \"flex-md-nowrap\", \"align-items-center\", \"pt-3\", \"pb-2\", \"mb-3\"], [1, \"col-md\", \"order-md-first\", \"text-center\", \"text-md-left\"], [1, \"small\", \"text-uppercase\", \"text-muted\", \"d-block\"], [4, \"ngIf\"], [1, \"btn-toolbar\", \"mb-2\", \"mb-md-0\"], [1, \"btn-group\", \"mr-2\"], [\"kendoButton\", \"\", \"type\", \"button\", 3, \"click\"], [3, \"statusCounts\"]],\n  template: function DashboardPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\")(4, \"span\", 3);\n      i0.ɵɵtext(5, \"Statistics\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, DashboardPageComponent_span_6_Template, 4, 6, \"span\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function DashboardPageComponent_Template_button_click_9_listener() {\n        return ctx.onMonthRangeTap(3);\n      });\n      i0.ɵɵtext(10, \"3 Months\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function DashboardPageComponent_Template_button_click_11_listener() {\n        return ctx.onMonthRangeTap(6);\n      });\n      i0.ɵɵtext(12, \"6 Months\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function DashboardPageComponent_Template_button_click_13_listener() {\n        return ctx.onMonthRangeTap(12);\n      });\n      i0.ɵɵtext(14, \"1 Year\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(15, \"app-active-issues\", 8);\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.filteredDateStart && ctx.filteredDateEnd);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"statusCounts\", i0.ɵɵpipeBind1(16, 2, ctx.statusCounts$));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ButtonDirective, i5.ActiveIssuesComponent, i3.AsyncPipe, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQucGFnZS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAT,QAA8C,MAA9C;;;;;;;;;;ICKgBC;IAAmDA;;;IAE7CA;;;;;IAF6CA;IAAAA;;;;ADanE,OAAM,MAAOC,sBAAP,CAA6B;EAsB/BC,YACYC,gBADZ,EAEYC,KAFZ,EAEwB;IADZ;IACA;IArBL,cAA0B,EAA1B;IAIA,qBAA+C,IAAIL,eAAJ,CAAkC;MACpFM,gBAAgB,EAAE,CADkE;MAEpFC,SAAS,EAAE,CAFyE;MAGpFC,gBAAgB,EAAE,CAHkE;MAIpFC,cAAc,EAAE;IAJoE,CAAlC,CAA/C;EAkBF;;EAXoB,IAAbC,aAAa;IACrB,IAAI,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,WAArB,EAAkC;MAC9B,OAAO,KAAKP,KAAL,CAAWM,KAAX,CAAiBC,WAAjB,CAA6BC,EAApC;IACH,CAFD,MAEO;MACH,OAAOC,SAAP;IACH;EACJ;;EAOMC,QAAQ;IACX,KAAKC,OAAL;EACH;;EAEMC,eAAe,CAACC,MAAD,EAAe;IACjC,MAAMC,KAAK,GAAG,KAAKC,YAAL,CAAkBF,MAAlB,CAAd;IACA,KAAKG,iBAAL,GAAyBF,KAAK,CAACG,SAA/B;IACA,KAAKC,eAAL,GAAuBJ,KAAK,CAACK,OAA7B;IACA,KAAKC,MAAL,GAAc;MACVC,MAAM,EAAE,KAAKD,MAAL,CAAYC,MADV;MAEVF,OAAO,EAAEL,KAAK,CAACK,OAFL;MAGVF,SAAS,EAAEH,KAAK,CAACG;IAHP,CAAd;IAKA,KAAKN,OAAL;EACH;;EAEOA,OAAO;IACX,KAAKW,GAAL,GAAW,KAAKvB,gBAAL,CAAsBwB,eAAtB,CAAsC,KAAKH,MAA3C,EACNI,SADM,CACIC,MAAM,IAAG;MAChB,KAAKC,aAAL,CAAmBC,IAAnB,CAAwBF,MAAxB;IACH,CAHM,CAAX;EAIH;;EAGOV,YAAY,CAACF,MAAD,EAAe;IAC/B,MAAMe,GAAG,GAAG,IAAIC,IAAJ,EAAZ;IACA,MAAMC,KAAK,GAAG,IAAID,IAAJ,EAAd;IACAC,KAAK,CAACC,QAAN,CAAeD,KAAK,CAACE,QAAN,KAAmBnB,MAAlC;IACA,OAAO;MACHI,SAAS,EAAEa,KADR;MAEHX,OAAO,EAAES;IAFN,CAAP;EAIH;;EAEMK,WAAW;IACd,IAAI,KAAKX,GAAT,EAAc;MACV,KAAKA,GAAL,CAASY,WAAT;IACH;EACJ;;AAjE8B;;;mBAAtBrC,wBAAsBD;AAAA;;;QAAtBC;EAAsBsC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCpBnC3C,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,IAAvB,EAAuB,CAAvB,EAAuB,MAAvB,EAAuB,CAAvB;MAMsEA;MAAUA;MAChEA;MAGJA;MAGJA,+BAAsC,CAAtC,EAAsC,KAAtC,EAAsC,CAAtC,EAAsC,CAAtC,EAAsC,QAAtC,EAAsC,CAAtC;MAE0CA;QAAA,OAAS4C,oBAAgB,CAAhB,CAAT;MAA2B,CAA3B;MAA6B5C;MACrDA;MACVA;MAAkCA;QAAA,OAAS4C,oBAAgB,CAAhB,CAAT;MAA2B,CAA3B;MAA6B5C;MACrDA;MACVA;MAAkCA;QAAA,OAAS4C,oBAAgB,EAAhB,CAAT;MAA4B,CAA5B;MAA8B5C;MACxDA;MAOpBA;;MACJA;;;;MArBuBA;MAAAA;MAoBAA;MAAAA","names":["BehaviorSubject","i0","DashboardPageComponent","constructor","dashboardService","store","activeItemsCount","closeRate","closedItemsCount","openItemsCount","currentUserId","value","currentUser","id","undefined","ngOnInit","refresh","onMonthRangeTap","months","range","getDateRange","filteredDateStart","dateStart","filteredDateEnd","dateEnd","filter","userId","sub","getStatusCounts","subscribe","result","statusCounts$","next","now","Date","start","setMonth","getMonth","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\dashboard\\pages\\dashboard\\dashboard.page.component.ts","C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\dashboard\\pages\\dashboard\\dashboard.page.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { Store } from 'src/app/core/state/app-store';\r\nimport { StatusCounts } from '../../models';\r\nimport { DashboardFilter } from 'src/app/shared/models/dto/stats/dashboard-filter';\r\n\r\n\r\ninterface DateRange {\r\n    dateStart: Date;\r\n    dateEnd: Date;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: 'dashboard.page.component.html',\r\n    styleUrls: ['dashboard.page.component.css']\r\n})\r\nexport class DashboardPageComponent implements OnInit, OnDestroy {\r\n\r\n    private sub: Subscription | undefined;\r\n    public filter: DashboardFilter = {};\r\n    public filteredDateStart: Date | undefined;\r\n    public filteredDateEnd: Date | undefined;\r\n\r\n    public statusCounts$: BehaviorSubject<StatusCounts> = new BehaviorSubject<StatusCounts>({\r\n        activeItemsCount: 0,\r\n        closeRate: 0,\r\n        closedItemsCount: 0,\r\n        openItemsCount: 0\r\n    });\r\n\r\n    private get currentUserId() {\r\n        if (this.store.value.currentUser) {\r\n            return this.store.value.currentUser.id;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        private dashboardService: DashboardService,\r\n        private store: Store\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n        this.refresh();\r\n    }\r\n\r\n    public onMonthRangeTap(months: number) {\r\n        const range = this.getDateRange(months);\r\n        this.filteredDateStart = range.dateStart;\r\n        this.filteredDateEnd = range.dateEnd;\r\n        this.filter = {\r\n            userId: this.filter.userId,\r\n            dateEnd: range.dateEnd,\r\n            dateStart: range.dateStart\r\n        };\r\n        this.refresh();\r\n    }\r\n\r\n    private refresh() {\r\n        this.sub = this.dashboardService.getStatusCounts(this.filter)\r\n            .subscribe(result => {\r\n                this.statusCounts$.next(result);\r\n            });\r\n    }\r\n\r\n\r\n    private getDateRange(months: number): DateRange {\r\n        const now = new Date();\r\n        const start = new Date();\r\n        start.setMonth(start.getMonth() - months);\r\n        return {\r\n            dateStart: start,\r\n            dateEnd: now\r\n        };\r\n    }\r\n    \r\n    public ngOnDestroy() {\r\n        if (this.sub) {\r\n            this.sub.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","<div class=\"dashboard\">\r\n\r\n    <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\r\n\r\n        <div class=\"col-md order-md-first text-center text-md-left\">\r\n            <h2>\r\n                <span class=\"small text-uppercase text-muted d-block\">Statistics</span>\r\n                <span *ngIf=\"filteredDateStart && filteredDateEnd\">{{ filteredDateStart | date }} - {{ filteredDateEnd\r\n                    | date\r\n                    }}</span>\r\n            </h2>\r\n        </div>\r\n\r\n        <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n            <div class=\"btn-group mr-2\">\r\n                <button kendoButton type=\"button\" (click)=\"onMonthRangeTap(3)\">3\r\n                    Months</button>\r\n                <button kendoButton type=\"button\" (click)=\"onMonthRangeTap(6)\">6\r\n                    Months</button>\r\n                <button kendoButton type=\"button\" (click)=\"onMonthRangeTap(12)\">1\r\n                    Year</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <app-active-issues [statusCounts]=\"statusCounts$ | async\"></app-active-issues>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}