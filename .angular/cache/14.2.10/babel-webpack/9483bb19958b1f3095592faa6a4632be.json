{"ast":null,"code":"/* tslint:disable:object-literal-sort-keys max-line-length */\nimport { isWindowAvailable } from './util';\nconst agentRxs = {\n  wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)(\\.(\\d+(\\.\\d+)?))?/,\n  iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n  ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n  meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n  webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n  sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n  ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n};\nconst osRxs = {\n  ios: /^i(phone|pad|pod)$/i,\n  android: /^android|fire$/i,\n  blackberry: /^blackberry|playbook/i,\n  windows: /windows/,\n  wp: /wp/,\n  flat: /sailfish|ffos|tizen/i,\n  meego: /meego/\n};\nconst desktopBrowserRxs = {\n  edge: /(edge)[ \\/]([\\w.]+)/i,\n  webkit: /(chrome)[ \\/]([\\w.]+)/i,\n  safari: /(webkit)[ \\/]([\\w.]+)/i,\n  opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n  msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n  mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\nconst mobileBrowserRxs = {\n  omini: /Opera\\sMini/i,\n  omobile: /Opera\\sMobi/i,\n  firefox: /Firefox|Fennec/i,\n  mobilesafari: /version\\/.*safari/i,\n  ie: /MSIE|Windows\\sPhone/i,\n  chrome: /chrome|crios/i,\n  webkit: /webkit/i\n};\n\nconst testRx = (agent, rxs, dflt) => {\n  for (let rx in rxs) {\n    if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n      return rx;\n    }\n  }\n\n  return dflt !== undefined ? dflt : agent;\n};\n/**\n * A function that detects the mobile browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Linux; Android 8.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.3 Chrome/61.0.3163.81 Mobile Safari/537.36';\n * detectMobileOS(userAgent); // { android: true };\n * ```\n */\n\n\nexport const detectMobileOS = ua => {\n  let minorVersion;\n  let match = [];\n\n  for (let agent in agentRxs) {\n    if (agentRxs.hasOwnProperty(agent)) {\n      match = ua.match(agentRxs[agent]);\n\n      if (!match) {\n        continue;\n      }\n\n      if (agent === 'windows' && 'plugins' in window.navigator) {\n        return null;\n      } // Break if not Metro/Mobile Windows\n\n\n      const os = {};\n      os.device = agent;\n      os.browser = testRx(ua, mobileBrowserRxs, 'default');\n      os.name = testRx(agent, osRxs);\n      os[os.name] = true;\n      os.majorVersion = match[2];\n      os.minorVersion = match[3] ? match[3].replace('_', '.') : '.0';\n      minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n      os.flatVersion = os.majorVersion + minorVersion + new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0');\n      os.cordova = typeof window.PhoneGap !== undefined || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n\n      os.appMode = window.navigator.standalone || /file|local|wmapp/.test(window.location.protocol) || os.cordova; // Use file protocol to detect appModes.\n\n      return os;\n    }\n  }\n\n  return null;\n};\n/**\n * A function that detects the desktop browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19';\n * detectDesktopBrowser(userAgent); // { chrome: true, webkit: true };\n * ```\n */\n\nexport const detectDesktopBrowser = ua => {\n  let browserInfo = null;\n  let match = [];\n\n  for (let agent in desktopBrowserRxs) {\n    if (desktopBrowserRxs.hasOwnProperty(agent)) {\n      match = ua.match(desktopBrowserRxs[agent]);\n\n      if (match) {\n        browserInfo = {};\n        browserInfo[agent] = true;\n        browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n        browserInfo.version = parseInt(document.documentMode || match[2], 10);\n        break;\n      }\n    }\n  }\n\n  return browserInfo;\n};\nconst userAgent = isWindowAvailable() && window.navigator ? window.navigator.userAgent : null;\n/**\n * A constant holding the desktop browser info. The variable persists the result of the detectDesktopBrowser(window.navigator.userAgent) call.\n * If no desktop browser is detected, the constant will be `null`.\n */\n\nexport const browser = userAgent ? detectDesktopBrowser(userAgent) : null;\n/**\n * A constant holding the mobile OS info. The variable persists the result of the detectMobileOS(window.navigator.userAgent) call.\n * If no mobile OS is detected, the constant will be `null`.\n */\n\nexport const mobileOS = userAgent ? detectMobileOS(userAgent) : null;\n/**\n * A constant reporting the browser `touch` events support.\n */\n\nexport const touch = isWindowAvailable() && 'ontouchstart' in window;\n/**\n * @hidden\n * A constant reporting the browser `msPointers` events support.\n */\n\nexport const msPointers = browser && !browser.chrome && window.MSPointerEvent;\n/**\n * A constant reporting the browser `pointers` events support.\n */\n\nexport const pointers = browser && !browser.chrome && window.PointerEvent;\n/**\n * A constant reporting whether the browser is touch enabled.\n */\n\nexport const touchEnabled = mobileOS && (touch || msPointers || pointers);","map":{"version":3,"names":["isWindowAvailable","agentRxs","wp","fire","android","iphone","ipad","meego","webos","blackberry","playbook","windows","tizen","sailfish","ffos","osRxs","ios","flat","desktopBrowserRxs","edge","webkit","safari","opera","msie","mozilla","mobileBrowserRxs","omini","omobile","firefox","mobilesafari","ie","chrome","testRx","agent","rxs","dflt","rx","hasOwnProperty","test","undefined","detectMobileOS","ua","minorVersion","match","window","navigator","os","device","browser","name","majorVersion","replace","substr","flatVersion","Array","length","join","cordova","PhoneGap","appMode","standalone","location","protocol","detectDesktopBrowser","browserInfo","toLowerCase","split","version","parseInt","document","documentMode","userAgent","mobileOS","touch","msPointers","MSPointerEvent","pointers","PointerEvent","touchEnabled"],"sources":["C:/eÄŸitim/KendoRPS/rpstrackerng/node_modules/@progress/kendo-common/dist/es2015/support.js"],"sourcesContent":["/* tslint:disable:object-literal-sort-keys max-line-length */\nimport { isWindowAvailable } from './util';\nconst agentRxs = {\n    wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)(\\.(\\d+(\\.\\d+)?))?/,\n    iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n    ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n    meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n    webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n    sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n    ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n};\nconst osRxs = {\n    ios: /^i(phone|pad|pod)$/i,\n    android: /^android|fire$/i,\n    blackberry: /^blackberry|playbook/i,\n    windows: /windows/,\n    wp: /wp/,\n    flat: /sailfish|ffos|tizen/i,\n    meego: /meego/\n};\nconst desktopBrowserRxs = {\n    edge: /(edge)[ \\/]([\\w.]+)/i,\n    webkit: /(chrome)[ \\/]([\\w.]+)/i,\n    safari: /(webkit)[ \\/]([\\w.]+)/i,\n    opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n    msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n    mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\nconst mobileBrowserRxs = {\n    omini: /Opera\\sMini/i,\n    omobile: /Opera\\sMobi/i,\n    firefox: /Firefox|Fennec/i,\n    mobilesafari: /version\\/.*safari/i,\n    ie: /MSIE|Windows\\sPhone/i,\n    chrome: /chrome|crios/i,\n    webkit: /webkit/i\n};\nconst testRx = (agent, rxs, dflt) => {\n    for (let rx in rxs) {\n        if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n            return rx;\n        }\n    }\n    return dflt !== undefined ? dflt : agent;\n};\n/**\n * A function that detects the mobile browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Linux; Android 8.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.3 Chrome/61.0.3163.81 Mobile Safari/537.36';\n * detectMobileOS(userAgent); // { android: true };\n * ```\n */\nexport const detectMobileOS = (ua) => {\n    let minorVersion;\n    let match = [];\n    for (let agent in agentRxs) {\n        if (agentRxs.hasOwnProperty(agent)) {\n            match = ua.match(agentRxs[agent]);\n            if (!match) {\n                continue;\n            }\n            if (agent === 'windows' && 'plugins' in window.navigator) {\n                return null;\n            } // Break if not Metro/Mobile Windows\n            const os = {};\n            os.device = agent;\n            os.browser = testRx(ua, mobileBrowserRxs, 'default');\n            os.name = testRx(agent, osRxs);\n            os[os.name] = true;\n            os.majorVersion = match[2];\n            os.minorVersion = match[3] ? match[3].replace('_', '.') : '.0';\n            minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n            os.flatVersion = os.majorVersion + minorVersion +\n                (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0'));\n            os.cordova = typeof window.PhoneGap !== undefined\n                || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n            os.appMode = window.navigator.standalone\n                || (/file|local|wmapp/).test(window.location.protocol)\n                || os.cordova; // Use file protocol to detect appModes.\n            return os;\n        }\n    }\n    return null;\n};\n/**\n * A function that detects the desktop browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19';\n * detectDesktopBrowser(userAgent); // { chrome: true, webkit: true };\n * ```\n */\nexport const detectDesktopBrowser = (ua) => {\n    let browserInfo = null;\n    let match = [];\n    for (let agent in desktopBrowserRxs) {\n        if (desktopBrowserRxs.hasOwnProperty(agent)) {\n            match = ua.match(desktopBrowserRxs[agent]);\n            if (match) {\n                browserInfo = {};\n                browserInfo[agent] = true;\n                browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n                browserInfo.version = parseInt(document.documentMode || match[2], 10);\n                break;\n            }\n        }\n    }\n    return browserInfo;\n};\nconst userAgent = isWindowAvailable() && window.navigator ? window.navigator.userAgent : null;\n/**\n * A constant holding the desktop browser info. The variable persists the result of the detectDesktopBrowser(window.navigator.userAgent) call.\n * If no desktop browser is detected, the constant will be `null`.\n */\nexport const browser = userAgent ? detectDesktopBrowser(userAgent) : null;\n/**\n * A constant holding the mobile OS info. The variable persists the result of the detectMobileOS(window.navigator.userAgent) call.\n * If no mobile OS is detected, the constant will be `null`.\n */\nexport const mobileOS = userAgent ? detectMobileOS(userAgent) : null;\n/**\n * A constant reporting the browser `touch` events support.\n */\nexport const touch = isWindowAvailable() && 'ontouchstart' in window;\n/**\n * @hidden\n * A constant reporting the browser `msPointers` events support.\n */\nexport const msPointers = browser && !browser.chrome && window.MSPointerEvent;\n/**\n * A constant reporting the browser `pointers` events support.\n */\nexport const pointers = browser && !browser.chrome && window.PointerEvent;\n/**\n * A constant reporting whether the browser is touch enabled.\n */\nexport const touchEnabled = mobileOS && (touch || msPointers || pointers);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}