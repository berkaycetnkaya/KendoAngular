{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/backlog.service\";\nimport * as i3 from \"src/app/core/services\";\nimport * as i4 from \"src/app/core/state/app-store\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../components/detail/detail-section-selector/detail-section-selector.component\";\nimport * as i7 from \"../../components/detail/item-details/pt-item-details.component\";\nimport * as i8 from \"../../components/detail/item-tasks/pt-item-tasks.component\";\nimport * as i9 from \"../../components/detail/item-chitchat/pt-item-chitchat.component\";\n\nfunction DetailPageComponent_div_0_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-item-details\", 7);\n    i0.ɵɵlistener(\"itemSaved\", function DetailPageComponent_div_0_ng_template_7_Template_app_item_details_itemSaved_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onItemSaved($event));\n    })(\"usersRequested\", function DetailPageComponent_div_0_ng_template_7_Template_app_item_details_usersRequested_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onUsersRequested($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"item\", ctx_r1.item);\n  }\n}\n\nfunction DetailPageComponent_div_0_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-item-tasks\", 8);\n    i0.ɵɵlistener(\"addNewTask\", function DetailPageComponent_div_0_ng_template_8_Template_app_item_tasks_addNewTask_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onAddNewTask($event));\n    })(\"updateTask\", function DetailPageComponent_div_0_ng_template_8_Template_app_item_tasks_updateTask_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.onUpdateTask($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"tasks$\", ctx_r2.tasks$);\n  }\n}\n\nfunction DetailPageComponent_div_0_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-item-chitchat\", 9);\n    i0.ɵɵlistener(\"addNewComment\", function DetailPageComponent_div_0_ng_template_9_Template_app_item_chitchat_addNewComment_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onAddNewComment($event));\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"comments$\", ctx_r3.comments$)(\"currentUser\", i0.ɵɵpipeBind1(1, 2, ctx_r3.currentUser$));\n  }\n}\n\nfunction DetailPageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"h1\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"app-detail-section-selector\", 4);\n    i0.ɵɵlistener(\"screenSelected\", function DetailPageComponent_div_0_Template_app_detail_section_selector_screenSelected_5_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onScreenSelected($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 5);\n    i0.ɵɵtemplate(7, DetailPageComponent_div_0_ng_template_7_Template, 1, 1, \"ng-template\", 6);\n    i0.ɵɵtemplate(8, DetailPageComponent_div_0_ng_template_8_Template, 1, 1, \"ng-template\", 6);\n    i0.ɵɵtemplate(9, DetailPageComponent_div_0_ng_template_9_Template, 2, 4, \"ng-template\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.item.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"selectedScreen\", ctx_r0.selectedDetailsScreen);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.selectedDetailsScreen);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"details\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"tasks\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"chitchat\");\n  }\n}\n\nexport class DetailPageComponent {\n  constructor(activatedRoute, backlogService, ptUserService, navigationService, store) {\n    this.activatedRoute = activatedRoute;\n    this.backlogService = backlogService;\n    this.ptUserService = ptUserService;\n    this.navigationService = navigationService;\n    this.store = store;\n    this.itemId = 0;\n    this.selectedDetailsScreen = 'details';\n    this.tasks$ = new BehaviorSubject([]);\n    this.comments$ = new BehaviorSubject([]);\n    this.currentUser$ = this.store.select('currentUser');\n  }\n\n  ngOnInit() {\n    this.itemId = parseInt(this.activatedRoute.snapshot.params['id'], undefined);\n    this.currentItemSub = this.backlogService.getPtItem(this.itemId).subscribe(item => {\n      this.item = item;\n      this.tasks$.next(item.tasks);\n      this.comments$.next(item.comments);\n    });\n    const screen = this.activatedRoute.snapshot.params['screen'];\n\n    if (screen === 'details' || screen === 'tasks' || screen === 'chitchat') {\n      this.selectedDetailsScreen = screen;\n    } else {\n      this.navigationService.navigate([`/detail/${this.itemId}/details`]);\n    }\n  }\n\n  onScreenSelected(screen) {\n    this.selectedDetailsScreen = screen;\n    this.navigationService.navigate([`/detail/${this.itemId}/${screen}`]);\n  }\n\n  onUsersRequested(name) {\n    this.ptUserService.fetchUsers(name);\n  }\n\n  onAddNewTask(newTask) {\n    if (this.item) {\n      this.backlogService.addNewPtTask(newTask, this.item).then(nextTask => {\n        this.tasks$.next([nextTask].concat(this.tasks$.value));\n      });\n    }\n  }\n\n  onUpdateTask(taskUpdate) {\n    if (this.item) {\n      if (taskUpdate.delete) {\n        this.backlogService.deletePtTask(this.item, taskUpdate.task).then(ok => {\n          if (ok) {\n            const newTasks = this.tasks$.value.filter(task => {\n              if (task.id !== taskUpdate.task.id) {\n                return task;\n              }\n            });\n            this.tasks$.next(newTasks);\n          }\n        });\n      } else {\n        this.backlogService.updatePtTask(this.item, taskUpdate.task, taskUpdate.toggle, taskUpdate.newTitle).then(updatedTask => {\n          const newTasks = this.tasks$.value.map(task => {\n            if (task.id === updatedTask.id) {\n              return updatedTask;\n            } else {\n              return task;\n            }\n          });\n          this.tasks$.next(newTasks);\n        });\n      }\n    }\n  }\n\n  onAddNewComment(newComment) {\n    if (this.item) {\n      this.backlogService.addNewPtComment(newComment, this.item).then(nextComment => {\n        this.comments$.next([nextComment].concat(this.comments$.value));\n      });\n    }\n  }\n\n  onItemSaved(item) {\n    this.currentItemSub = this.backlogService.updatePtItem(item).subscribe(updateItem => {\n      this.item = updateItem;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.currentItemSub) {\n      this.currentItemSub.unsubscribe();\n    }\n  }\n\n}\n\nDetailPageComponent.ɵfac = function DetailPageComponent_Factory(t) {\n  return new (t || DetailPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.BacklogService), i0.ɵɵdirectiveInject(i3.PtUserService), i0.ɵɵdirectiveInject(i3.NavigationService), i0.ɵɵdirectiveInject(i4.Store));\n};\n\nDetailPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DetailPageComponent,\n  selectors: [[\"app-backlog-detail-page\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"d-flex\", \"justify-content-between\", \"flex-wrap\", \"flex-md-nowrap\", \"align-items-center\", \"pt-3\", \"pb-2\", \"mb-3\"], [1, \"h2\"], [1, \"btn-toolbar\", \"mb-2\", \"mb-md-0\"], [3, \"selectedScreen\", \"screenSelected\"], [3, \"ngSwitch\"], [3, \"ngSwitchCase\"], [3, \"item\", \"itemSaved\", \"usersRequested\"], [3, \"tasks$\", \"addNewTask\", \"updateTask\"], [3, \"comments$\", \"currentUser\", \"addNewComment\"]],\n  template: function DetailPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DetailPageComponent_div_0_Template, 10, 6, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.item);\n    }\n  },\n  dependencies: [i5.NgIf, i5.NgSwitch, i5.NgSwitchCase, i6.DetailSectionSelectorComponent, i7.PtItemDetailsComponent, i8.PtItemTasksComponent, i9.PtItemChitchatComponent, i5.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","i0","DetailPageComponent","constructor","activatedRoute","backlogService","ptUserService","navigationService","store","select","ngOnInit","itemId","parseInt","snapshot","params","undefined","currentItemSub","getPtItem","subscribe","item","tasks$","next","tasks","comments$","comments","screen","selectedDetailsScreen","navigate","onScreenSelected","onUsersRequested","name","fetchUsers","onAddNewTask","newTask","addNewPtTask","then","nextTask","concat","value","onUpdateTask","taskUpdate","delete","deletePtTask","task","ok","newTasks","filter","id","updatePtTask","toggle","newTitle","updatedTask","map","onAddNewComment","newComment","addNewPtComment","nextComment","onItemSaved","updatePtItem","updateItem","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\backlog\\pages\\detail\\detail.page.component.ts","C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\backlog\\pages\\detail\\detail.page.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Subscription, BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { DetailScreenType } from 'src/app/shared/models/ui/types/detail-screens';\r\nimport { PtItem, PtTask, PtComment, PtUser } from 'src/app/core/models/domain';\r\nimport { BacklogService } from '../../services/backlog.service';\r\nimport { PtUserService, NavigationService } from 'src/app/core/services';\r\nimport { PtNewTask, PtTaskUpdate, PtNewComment } from 'src/app/shared/models/dto';\r\nimport { Store } from 'src/app/core/state/app-store';\r\n\r\n@Component({\r\n    selector: 'app-backlog-detail-page',\r\n    templateUrl: 'detail.page.component.html'\r\n})\r\nexport class DetailPageComponent implements OnInit, OnDestroy {\r\n\r\n    private itemId = 0;\r\n    private currentItemSub: Subscription | undefined;\r\n    public selectedDetailsScreen: DetailScreenType = 'details';\r\n\r\n    public item: PtItem | undefined;\r\n    public tasks$: BehaviorSubject<PtTask[]> = new BehaviorSubject<PtTask[]>([]);\r\n    public comments$: BehaviorSubject<PtComment[]> = new BehaviorSubject<PtComment[]>([]);\r\n    public currentUser$: Observable<PtUser> = this.store.select<PtUser>('currentUser');\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private backlogService: BacklogService,\r\n        private ptUserService: PtUserService,\r\n        private navigationService: NavigationService,\r\n        private store: Store\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n        this.itemId = parseInt(this.activatedRoute.snapshot.params['id'], undefined);\r\n\r\n        this.currentItemSub = this.backlogService.getPtItem(this.itemId)\r\n            .subscribe(item => {\r\n                this.item = item;\r\n                this.tasks$.next(item.tasks);\r\n                this.comments$.next(item.comments);\r\n            });\r\n\r\n        const screen = this.activatedRoute.snapshot.params['screen'] as DetailScreenType;\r\n        if (screen === 'details' || screen === 'tasks' || screen === 'chitchat') {\r\n            this.selectedDetailsScreen = screen;\r\n        } else {\r\n            this.navigationService.navigate([`/detail/${this.itemId}/details`]);\r\n        }\r\n    }\r\n\r\n    public onScreenSelected(screen: DetailScreenType) {\r\n        this.selectedDetailsScreen = screen;\r\n        this.navigationService.navigate([`/detail/${this.itemId}/${screen}`]);\r\n    }\r\n\r\n    public onUsersRequested(name: string) {\r\n        this.ptUserService.fetchUsers(name);\r\n    }\r\n\r\n    public onAddNewTask(newTask: PtNewTask) {\r\n        if (this.item) {\r\n            this.backlogService.addNewPtTask(newTask, this.item).then(nextTask => {\r\n                this.tasks$.next([nextTask].concat(this.tasks$.value));\r\n            });\r\n        }\r\n    }\r\n\r\n    public onUpdateTask(taskUpdate: PtTaskUpdate) {\r\n        if (this.item) {\r\n            if (taskUpdate.delete) {\r\n                this.backlogService.deletePtTask(this.item, taskUpdate.task).then(ok => {\r\n                    if (ok) {\r\n                        const newTasks = this.tasks$.value.filter(task => {\r\n                            if (task.id !== taskUpdate.task.id) {\r\n                                return task;\r\n                            }\r\n                        });\r\n                        this.tasks$.next(newTasks);\r\n                    }\r\n                });\r\n            } else {\r\n                this.backlogService.updatePtTask(this.item, taskUpdate.task, taskUpdate.toggle, taskUpdate.newTitle).then(updatedTask => {\r\n                    const newTasks = this.tasks$.value.map(task => {\r\n                        if (task.id === updatedTask.id) {\r\n                            return updatedTask;\r\n                        } else {\r\n                            return task;\r\n                        }\r\n                    });\r\n                    this.tasks$.next(newTasks);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public onAddNewComment(newComment: PtNewComment) {\r\n        if (this.item) {\r\n            this.backlogService.addNewPtComment(newComment, this.item).then(nextComment => {\r\n                this.comments$.next([nextComment].concat(this.comments$.value));\r\n            });\r\n        }\r\n    }\r\n\r\n    public onItemSaved(item: PtItem) {\r\n        this.currentItemSub = this.backlogService.updatePtItem(item)\r\n            .subscribe(updateItem => {\r\n                this.item = updateItem;\r\n            });\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        if (this.currentItemSub) {\r\n            this.currentItemSub.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","<div *ngIf=\"item\">\r\n    <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\r\n        <h1 class=\"h2\">{{ item.title }}</h1>\r\n        <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n            <app-detail-section-selector [selectedScreen]=\"selectedDetailsScreen\" (screenSelected)=\"onScreenSelected($event)\"></app-detail-section-selector>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div [ngSwitch]=\"selectedDetailsScreen\">\r\n        <ng-template [ngSwitchCase]=\"'details'\">\r\n            <app-item-details [item]=\"item\" (itemSaved)=\"onItemSaved($event)\" (usersRequested)=\"onUsersRequested($event)\"></app-item-details>\r\n        </ng-template>\r\n        <ng-template [ngSwitchCase]=\"'tasks'\">\r\n            <app-item-tasks [tasks$]=\"tasks$\" (addNewTask)=\"onAddNewTask($event)\" (updateTask)=\"onUpdateTask($event)\"></app-item-tasks>\r\n        </ng-template>\r\n        <ng-template [ngSwitchCase]=\"'chitchat'\">\r\n            <app-item-chitchat [comments$]=\"comments$\" [currentUser]=\"currentUser$ | async\" (addNewComment)=\"onAddNewComment($event)\"></app-item-chitchat>\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}