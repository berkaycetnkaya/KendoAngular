{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { EMPTY_STRING } from 'src/app/core/helpers';\nimport { ItemType } from 'src/app/core/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/services\";\nimport * as i3 from \"../../services/backlog.service\";\nimport * as i4 from \"src/app/shared/services/modal.service\";\nimport * as i5 from \"src/app/core/state/app-store\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../../../shared/components/preset-filter/preset-filter.component\";\nimport * as i9 from \"../../../../shared/components/modal-dialog/modal-dialog.component\";\nimport * as i10 from \"../../components/backlog/pt-list.component\";\n\nfunction BacklogPageComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemType_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", itemType_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(itemType_r1);\n  }\n}\n\nexport class BacklogPageComponent {\n  constructor(activatedRoute, navigationService, backlogService, modalService, store) {\n    this.activatedRoute = activatedRoute;\n    this.navigationService = navigationService;\n    this.backlogService = backlogService;\n    this.modalService = modalService;\n    this.store = store;\n    this.items$ = new BehaviorSubject([]);\n    this.itemTypesProvider = ItemType.List.map(t => t.PtItemType);\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      if (this.itemsSub) {\n        this.itemsSub.unsubscribe();\n      }\n\n      const reqPreset = params['preset'];\n\n      if (reqPreset) {\n        this.itemsSub = this.backlogService.getItems(reqPreset).subscribe(items => {\n          this.items$.next(items);\n        });\n      }\n    });\n    this.resetModalFields();\n  }\n\n  resetModalFields() {\n    this.newItem = {\n      title: EMPTY_STRING,\n      description: EMPTY_STRING,\n      type: 'PBI'\n    };\n  }\n\n  selectListItem(item) {\n    // navigate to detail page\n    this.navigationService.navigate(['/detail', item.id]);\n  }\n\n  onAddTap(id) {\n    this.openModal(id);\n  }\n\n  onSaveTap(newItem, id) {\n    if (typeof newItem === 'object') {\n      if (this.store.value.currentUser) {\n        this.backlogService.addNewPtItem(newItem, this.store.value.currentUser).then(nextItem => {\n          this.items$.next([nextItem, ...this.items$.value]);\n        });\n      }\n\n      this.closeModal(id);\n    }\n  }\n\n  openModal(id) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id) {\n    this.modalService.close(id);\n    this.resetModalFields();\n  }\n\n}\n\nBacklogPageComponent.ɵfac = function BacklogPageComponent_Factory(t) {\n  return new (t || BacklogPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.NavigationService), i0.ɵɵdirectiveInject(i3.BacklogService), i0.ɵɵdirectiveInject(i4.ModalService), i0.ɵɵdirectiveInject(i5.Store));\n};\n\nBacklogPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BacklogPageComponent,\n  selectors: [[\"app-backlog\"]],\n  decls: 40,\n  vars: 8,\n  consts: [[1, \"d-flex\", \"justify-content-between\", \"flex-wrap\", \"flex-md-nowrap\", \"align-items-center\", \"pt-3\", \"pb-2\", \"mb-3\"], [1, \"h2\"], [1, \"btn-toolbar\", \"mb-2\", \"mb-md-0\"], [1, \"btn-group\", \"mr-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [3, \"items\", \"listItemSelected\"], [\"id\", \"custom-modal-1\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\", \"row\"], [1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\"], [\"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"itemType\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [3, \"ngValue\"]],\n  template: function BacklogPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Backlog\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"app-preset-filter\");\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function BacklogPageComponent_Template_button_click_6_listener() {\n        return ctx.onAddTap(\"custom-modal-1\");\n      });\n      i0.ɵɵtext(7, \"Add\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(8, \"app-list\", 5);\n      i0.ɵɵlistener(\"listItemSelected\", function BacklogPageComponent_Template_app_list_listItemSelected_8_listener($event) {\n        return ctx.selectListItem($event);\n      });\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"custom-modal\", 6)(11, \"div\", 7)(12, \"h4\", 8);\n      i0.ɵɵtext(13, \"Add New Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function BacklogPageComponent_Template_button_click_14_listener() {\n        return ctx.closeModal(\"custom-modal-1\");\n      });\n      i0.ɵɵelementStart(15, \"span\", 10);\n      i0.ɵɵtext(16, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 11)(18, \"form\")(19, \"div\", 12)(20, \"label\", 13);\n      i0.ɵɵtext(21, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 14)(23, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function BacklogPageComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.newItem.title = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 12)(25, \"label\", 13);\n      i0.ɵɵtext(26, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 14)(28, \"textarea\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function BacklogPageComponent_Template_textarea_ngModelChange_28_listener($event) {\n        return ctx.newItem.description = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 12)(30, \"label\", 13);\n      i0.ɵɵtext(31, \"Item Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 14)(33, \"select\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function BacklogPageComponent_Template_select_ngModelChange_33_listener($event) {\n        return ctx.newItem.type = $event;\n      });\n      i0.ɵɵtemplate(34, BacklogPageComponent_option_34_Template, 2, 2, \"option\", 18);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(35, \"div\", 19)(36, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function BacklogPageComponent_Template_button_click_36_listener() {\n        return ctx.closeModal(\"custom-modal-1\");\n      });\n      i0.ɵɵtext(37, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function BacklogPageComponent_Template_button_click_38_listener() {\n        return ctx.onSaveTap(ctx.newItem, \"custom-modal-1\");\n      });\n      i0.ɵɵtext(39, \"Save changes\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"items\", i0.ɵɵpipeBind1(9, 6, ctx.items$));\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.title);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.description);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.itemTypesProvider);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.newItem.title);\n    }\n  },\n  dependencies: [i6.NgForOf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i8.PresetFilterComponent, i9.ModalComponent, i10.PtListComponent, i6.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiYWNrbG9nLnBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","EMPTY_STRING","ItemType","i0","BacklogPageComponent","constructor","activatedRoute","navigationService","backlogService","modalService","store","List","map","t","PtItemType","ngOnInit","params","subscribe","itemsSub","unsubscribe","reqPreset","getItems","items","items$","next","resetModalFields","newItem","title","description","type","selectListItem","item","navigate","id","onAddTap","openModal","onSaveTap","value","currentUser","addNewPtItem","then","nextItem","closeModal","open","close","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\backlog\\pages\\backlog\\backlog.page.component.ts","C:\\eğitim\\KendoRPS\\rpstrackerng\\src\\app\\modules\\backlog\\pages\\backlog\\backlog.page.component.html"],"sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\n\r\nimport { NavigationService } from 'src/app/core/services';\r\nimport { BacklogService } from '../../services/backlog.service';\r\nimport { PtItem } from 'src/app/core/models/domain';\r\nimport { PresetType } from 'src/app/core/models/domain/types';\r\nimport { PtNewItem } from 'src/app/shared/models/dto';\r\nimport { EMPTY_STRING } from 'src/app/core/helpers';\r\nimport { ItemType } from 'src/app/core/constants';\r\nimport { Store } from 'src/app/core/state/app-store';\r\nimport { ModalService } from 'src/app/shared/services/modal.service';\r\n\r\n@Component({\r\n    selector: 'app-backlog',\r\n    templateUrl: 'backlog.page.component.html',\r\n    styleUrls: ['backlog.page.component.css']\r\n})\r\nexport class BacklogPageComponent implements OnInit {\r\n\r\n    private itemsSub: Subscription | undefined;\r\n    public items$: BehaviorSubject<PtItem[]> = new BehaviorSubject<PtItem[]>([]);\r\n\r\n    public itemTypesProvider = ItemType.List.map((t) => t.PtItemType);\r\n    public newItem: PtNewItem | undefined;\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private navigationService: NavigationService,\r\n        private backlogService: BacklogService,\r\n        private modalService: ModalService,\r\n        private store: Store\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n        this.activatedRoute.params.subscribe(params => {\r\n            if (this.itemsSub) {\r\n                this.itemsSub.unsubscribe();\r\n            }\r\n            const reqPreset = params['preset'] as PresetType;\r\n            if (reqPreset) {\r\n                this.itemsSub = this.backlogService.getItems(reqPreset)\r\n                    .subscribe(items => {\r\n                        this.items$.next(items);\r\n                    });\r\n            }\r\n        });\r\n        this.resetModalFields();\r\n    }\r\n\r\n    private resetModalFields() {\r\n        this.newItem = {\r\n            title: EMPTY_STRING,\r\n            description: EMPTY_STRING,\r\n            type: 'PBI'\r\n        };\r\n    }\r\n\r\n    public selectListItem(item: PtItem) {\r\n        // navigate to detail page\r\n        this.navigationService.navigate(['/detail', item.id]);\r\n    }\r\n\r\n    public onAddTap(id: string) {\r\n        this.openModal(id);\r\n    }\r\n\r\n    onSaveTap(newItem: PtNewItem, id: string) {\r\n        if (typeof newItem === 'object') {\r\n            if (this.store.value.currentUser) {\r\n                this.backlogService.addNewPtItem(newItem, this.store.value.currentUser)\r\n                    .then(nextItem => {\r\n                        this.items$.next([nextItem, ...this.items$.value]);\r\n                    });\r\n            }\r\n            this.closeModal(id);\r\n        }\r\n    }\r\n\r\n    openModal(id: string) {\r\n        this.modalService.open(id);\r\n    }\r\n    \r\n    closeModal(id: string) {\r\n        this.modalService.close(id);\r\n        this.resetModalFields();\r\n    }\r\n}\r\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\r\n    <h1 class=\"h2\">Backlog</h1>\r\n    <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n        <app-preset-filter></app-preset-filter>\r\n\r\n        <div class=\"btn-group mr-2\">\r\n            <button type=\"button\" (click)=\"onAddTap('custom-modal-1')\" class=\"btn btn-sm btn-outline-secondary\">Add</button>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<app-list [items]=\"items$ | async\" (listItemSelected)=\"selectListItem($event)\"></app-list>\r\n\r\n<custom-modal id=\"custom-modal-1\">\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Add New Item</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal('custom-modal-1')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form>\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-sm-2 col-form-label\">Title</label>\r\n                <div class=\"col-sm-10\">\r\n                    <input class=\"form-control\" [(ngModel)]=\"newItem.title\" name=\"title\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-sm-2 col-form-label\">Description</label>\r\n                <div class=\"col-sm-10\">\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"newItem.description\" name=\"description\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group row\">\r\n                <label class=\"col-sm-2 col-form-label\">Item Type</label>\r\n                <div class=\"col-sm-10\">\r\n                    <select class=\"form-control\" [(ngModel)]=\"newItem.type\" name=\"itemType\">\r\n                        <option *ngFor=\"let itemType of itemTypesProvider\" [ngValue]=\"itemType\">{{itemType}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\" (click)=\"closeModal('custom-modal-1')\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!newItem.title\" (click)=\"onSaveTap(newItem,'custom-modal-1')\">Save\r\n            changes</button>\r\n    </div>\r\n</custom-modal>\r\n"]},"metadata":{},"sourceType":"module"}